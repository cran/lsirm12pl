// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// intrm1pl_cpp
Rcpp::List intrm1pl_cpp(arma::mat data, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_delta, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_mean_delta, const double pr_sd_delta, const double pr_a_theta, const double pr_b_theta);
RcppExport SEXP _lsirm12pl_intrm1pl_cpp(SEXP dataSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_deltaSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_mean_deltaSEXP, SEXP pr_sd_deltaSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_delta(jump_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_delta(pr_mean_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_delta(pr_sd_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(intrm1pl_cpp(data, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_delta, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_mean_delta, pr_sd_delta, pr_a_theta, pr_b_theta));
    return rcpp_result_gen;
END_RCPP
}
// intrm1pl_mar_cpp
Rcpp::List intrm1pl_mar_cpp(arma::mat data, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_delta, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_mean_delta, const double pr_sd_delta, const double pr_a_theta, const double pr_b_theta, const double missing);
RcppExport SEXP _lsirm12pl_intrm1pl_mar_cpp(SEXP dataSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_deltaSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_mean_deltaSEXP, SEXP pr_sd_deltaSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP missingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_delta(jump_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_delta(pr_mean_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_delta(pr_sd_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type missing(missingSEXP);
    rcpp_result_gen = Rcpp::wrap(intrm1pl_mar_cpp(data, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_delta, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_mean_delta, pr_sd_delta, pr_a_theta, pr_b_theta, missing));
    return rcpp_result_gen;
END_RCPP
}
// intrm1pl_mcar_cpp
Rcpp::List intrm1pl_mcar_cpp(arma::mat data, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_delta, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_mean_delta, const double pr_sd_delta, const double pr_a_theta, const double pr_b_theta, const double missing);
RcppExport SEXP _lsirm12pl_intrm1pl_mcar_cpp(SEXP dataSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_deltaSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_mean_deltaSEXP, SEXP pr_sd_deltaSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP missingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_delta(jump_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_delta(pr_mean_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_delta(pr_sd_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type missing(missingSEXP);
    rcpp_result_gen = Rcpp::wrap(intrm1pl_mcar_cpp(data, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_delta, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_mean_delta, pr_sd_delta, pr_a_theta, pr_b_theta, missing));
    return rcpp_result_gen;
END_RCPP
}
// intrm1pl_normal_cpp
Rcpp::List intrm1pl_normal_cpp(arma::mat data, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_delta, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_mean_delta, const double pr_sd_delta, const double pr_a_eps, const double pr_b_eps, const double pr_a_theta, const double pr_b_theta);
RcppExport SEXP _lsirm12pl_intrm1pl_normal_cpp(SEXP dataSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_deltaSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_mean_deltaSEXP, SEXP pr_sd_deltaSEXP, SEXP pr_a_epsSEXP, SEXP pr_b_epsSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_delta(jump_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_delta(pr_mean_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_delta(pr_sd_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_eps(pr_a_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_eps(pr_b_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(intrm1pl_normal_cpp(data, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_delta, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_mean_delta, pr_sd_delta, pr_a_eps, pr_b_eps, pr_a_theta, pr_b_theta));
    return rcpp_result_gen;
END_RCPP
}
// intrm1pl_normal_mar_cpp
Rcpp::List intrm1pl_normal_mar_cpp(arma::mat data, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_delta, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_mean_delta, const double pr_sd_delta, const double pr_a_eps, const double pr_b_eps, const double pr_a_theta, const double pr_b_theta, const double missing);
RcppExport SEXP _lsirm12pl_intrm1pl_normal_mar_cpp(SEXP dataSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_deltaSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_mean_deltaSEXP, SEXP pr_sd_deltaSEXP, SEXP pr_a_epsSEXP, SEXP pr_b_epsSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP missingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_delta(jump_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_delta(pr_mean_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_delta(pr_sd_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_eps(pr_a_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_eps(pr_b_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type missing(missingSEXP);
    rcpp_result_gen = Rcpp::wrap(intrm1pl_normal_mar_cpp(data, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_delta, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_mean_delta, pr_sd_delta, pr_a_eps, pr_b_eps, pr_a_theta, pr_b_theta, missing));
    return rcpp_result_gen;
END_RCPP
}
// intrm1pl_normal_mcar_cpp
Rcpp::List intrm1pl_normal_mcar_cpp(arma::mat data, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_delta, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_mean_delta, const double pr_sd_delta, const double pr_a_eps, const double pr_b_eps, const double pr_a_theta, const double pr_b_theta, const double missing);
RcppExport SEXP _lsirm12pl_intrm1pl_normal_mcar_cpp(SEXP dataSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_deltaSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_mean_deltaSEXP, SEXP pr_sd_deltaSEXP, SEXP pr_a_epsSEXP, SEXP pr_b_epsSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP missingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_delta(jump_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_delta(pr_mean_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_delta(pr_sd_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_eps(pr_a_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_eps(pr_b_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type missing(missingSEXP);
    rcpp_result_gen = Rcpp::wrap(intrm1pl_normal_mcar_cpp(data, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_delta, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_mean_delta, pr_sd_delta, pr_a_eps, pr_b_eps, pr_a_theta, pr_b_theta, missing));
    return rcpp_result_gen;
END_RCPP
}
// intrm2pl_cpp
Rcpp::List intrm2pl_cpp(arma::mat data, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_alpha, const double jump_delta, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_mean_delta, const double pr_sd_delta, const double pr_mean_alpha, const double pr_sd_alpha, const double pr_a_theta, const double pr_b_theta);
RcppExport SEXP _lsirm12pl_intrm2pl_cpp(SEXP dataSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_alphaSEXP, SEXP jump_deltaSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_mean_deltaSEXP, SEXP pr_sd_deltaSEXP, SEXP pr_mean_alphaSEXP, SEXP pr_sd_alphaSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_alpha(jump_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_delta(jump_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_delta(pr_mean_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_delta(pr_sd_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_alpha(pr_mean_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_alpha(pr_sd_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(intrm2pl_cpp(data, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_alpha, jump_delta, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_mean_delta, pr_sd_delta, pr_mean_alpha, pr_sd_alpha, pr_a_theta, pr_b_theta));
    return rcpp_result_gen;
END_RCPP
}
// intrm2pl_mar_cpp
Rcpp::List intrm2pl_mar_cpp(arma::mat data, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_alpha, const double jump_delta, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_mean_delta, const double pr_sd_delta, const double pr_mean_alpha, const double pr_sd_alpha, const double pr_a_theta, const double pr_b_theta, const double missing);
RcppExport SEXP _lsirm12pl_intrm2pl_mar_cpp(SEXP dataSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_alphaSEXP, SEXP jump_deltaSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_mean_deltaSEXP, SEXP pr_sd_deltaSEXP, SEXP pr_mean_alphaSEXP, SEXP pr_sd_alphaSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP missingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_alpha(jump_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_delta(jump_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_delta(pr_mean_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_delta(pr_sd_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_alpha(pr_mean_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_alpha(pr_sd_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type missing(missingSEXP);
    rcpp_result_gen = Rcpp::wrap(intrm2pl_mar_cpp(data, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_alpha, jump_delta, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_mean_delta, pr_sd_delta, pr_mean_alpha, pr_sd_alpha, pr_a_theta, pr_b_theta, missing));
    return rcpp_result_gen;
END_RCPP
}
// intrm2pl_mcar_cpp
Rcpp::List intrm2pl_mcar_cpp(arma::mat data, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_alpha, const double jump_delta, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_mean_delta, const double pr_sd_delta, const double pr_mean_alpha, const double pr_sd_alpha, const double pr_a_theta, const double pr_b_theta, const double missing);
RcppExport SEXP _lsirm12pl_intrm2pl_mcar_cpp(SEXP dataSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_alphaSEXP, SEXP jump_deltaSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_mean_deltaSEXP, SEXP pr_sd_deltaSEXP, SEXP pr_mean_alphaSEXP, SEXP pr_sd_alphaSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP missingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_alpha(jump_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_delta(jump_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_delta(pr_mean_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_delta(pr_sd_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_alpha(pr_mean_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_alpha(pr_sd_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type missing(missingSEXP);
    rcpp_result_gen = Rcpp::wrap(intrm2pl_mcar_cpp(data, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_alpha, jump_delta, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_mean_delta, pr_sd_delta, pr_mean_alpha, pr_sd_alpha, pr_a_theta, pr_b_theta, missing));
    return rcpp_result_gen;
END_RCPP
}
// intrm2pl_normal_cpp
Rcpp::List intrm2pl_normal_cpp(arma::mat data, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_alpha, const double jump_delta, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_a_eps, const double pr_b_eps, const double pr_a_theta, const double pr_b_theta, const double pr_mean_delta, const double pr_sd_delta, const double pr_mean_alpha, const double pr_sd_alpha);
RcppExport SEXP _lsirm12pl_intrm2pl_normal_cpp(SEXP dataSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_alphaSEXP, SEXP jump_deltaSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_a_epsSEXP, SEXP pr_b_epsSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP pr_mean_deltaSEXP, SEXP pr_sd_deltaSEXP, SEXP pr_mean_alphaSEXP, SEXP pr_sd_alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_alpha(jump_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_delta(jump_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_eps(pr_a_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_eps(pr_b_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_delta(pr_mean_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_delta(pr_sd_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_alpha(pr_mean_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_alpha(pr_sd_alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(intrm2pl_normal_cpp(data, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_alpha, jump_delta, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_a_eps, pr_b_eps, pr_a_theta, pr_b_theta, pr_mean_delta, pr_sd_delta, pr_mean_alpha, pr_sd_alpha));
    return rcpp_result_gen;
END_RCPP
}
// intrm2pl_normal_mar_cpp
Rcpp::List intrm2pl_normal_mar_cpp(arma::mat data, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_alpha, const double jump_delta, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_a_eps, const double pr_b_eps, const double pr_a_theta, const double pr_b_theta, const double pr_mean_delta, const double pr_sd_delta, const double pr_mean_alpha, const double pr_sd_alpha, const double missing);
RcppExport SEXP _lsirm12pl_intrm2pl_normal_mar_cpp(SEXP dataSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_alphaSEXP, SEXP jump_deltaSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_a_epsSEXP, SEXP pr_b_epsSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP pr_mean_deltaSEXP, SEXP pr_sd_deltaSEXP, SEXP pr_mean_alphaSEXP, SEXP pr_sd_alphaSEXP, SEXP missingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_alpha(jump_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_delta(jump_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_eps(pr_a_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_eps(pr_b_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_delta(pr_mean_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_delta(pr_sd_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_alpha(pr_mean_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_alpha(pr_sd_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type missing(missingSEXP);
    rcpp_result_gen = Rcpp::wrap(intrm2pl_normal_mar_cpp(data, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_alpha, jump_delta, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_a_eps, pr_b_eps, pr_a_theta, pr_b_theta, pr_mean_delta, pr_sd_delta, pr_mean_alpha, pr_sd_alpha, missing));
    return rcpp_result_gen;
END_RCPP
}
// intrm2pl_normal_mcar_cpp
Rcpp::List intrm2pl_normal_mcar_cpp(arma::mat data, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_alpha, const double jump_delta, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_a_eps, const double pr_b_eps, const double pr_a_theta, const double pr_b_theta, const double pr_mean_delta, const double pr_sd_delta, const double pr_mean_alpha, const double pr_sd_alpha, const double missing);
RcppExport SEXP _lsirm12pl_intrm2pl_normal_mcar_cpp(SEXP dataSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_alphaSEXP, SEXP jump_deltaSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_a_epsSEXP, SEXP pr_b_epsSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP pr_mean_deltaSEXP, SEXP pr_sd_deltaSEXP, SEXP pr_mean_alphaSEXP, SEXP pr_sd_alphaSEXP, SEXP missingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_alpha(jump_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_delta(jump_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_eps(pr_a_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_eps(pr_b_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_delta(pr_mean_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_delta(pr_sd_deltaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_alpha(pr_mean_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_alpha(pr_sd_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type missing(missingSEXP);
    rcpp_result_gen = Rcpp::wrap(intrm2pl_normal_mcar_cpp(data, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_alpha, jump_delta, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_a_eps, pr_b_eps, pr_a_theta, pr_b_theta, pr_mean_delta, pr_sd_delta, pr_mean_alpha, pr_sd_alpha, missing));
    return rcpp_result_gen;
END_RCPP
}
// lsirm1pl_cpp
Rcpp::List lsirm1pl_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_a_theta, const double pr_b_theta, const double pr_mean_theta, const double pr_mean_gamma, const double pr_sd_gamma, const double jump_gamma);
RcppExport SEXP _lsirm12pl_lsirm1pl_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_mean_gammaSEXP, SEXP pr_sd_gammaSEXP, SEXP jump_gammaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_gamma(pr_mean_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_gamma(pr_sd_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_gamma(jump_gammaSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm1pl_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_a_theta, pr_b_theta, pr_mean_theta, pr_mean_gamma, pr_sd_gamma, jump_gamma));
    return rcpp_result_gen;
END_RCPP
}
// lsirm1pl_fixed_gamma_cpp
Rcpp::List lsirm1pl_fixed_gamma_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_a_theta, const double pr_b_theta);
RcppExport SEXP _lsirm12pl_lsirm1pl_fixed_gamma_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm1pl_fixed_gamma_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_a_theta, pr_b_theta));
    return rcpp_result_gen;
END_RCPP
}
// lsirm1pl_fixed_gamma_mar_cpp
Rcpp::List lsirm1pl_fixed_gamma_mar_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_a_theta, const double pr_b_theta, const double missing);
RcppExport SEXP _lsirm12pl_lsirm1pl_fixed_gamma_mar_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP missingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type missing(missingSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm1pl_fixed_gamma_mar_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_a_theta, pr_b_theta, missing));
    return rcpp_result_gen;
END_RCPP
}
// lsirm1pl_fixed_gamma_mcar_cpp
Rcpp::List lsirm1pl_fixed_gamma_mcar_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_a_theta, const double pr_b_theta, const double missing);
RcppExport SEXP _lsirm12pl_lsirm1pl_fixed_gamma_mcar_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP missingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type missing(missingSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm1pl_fixed_gamma_mcar_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_a_theta, pr_b_theta, missing));
    return rcpp_result_gen;
END_RCPP
}
// lsirm1pl_mar_cpp
Rcpp::List lsirm1pl_mar_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_gamma, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_mean_gamma, const double pr_sd_gamma, const double pr_a_theta, const double pr_b_theta, const double missing);
RcppExport SEXP _lsirm12pl_lsirm1pl_mar_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_gammaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_mean_gammaSEXP, SEXP pr_sd_gammaSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP missingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_gamma(jump_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_gamma(pr_mean_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_gamma(pr_sd_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type missing(missingSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm1pl_mar_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_gamma, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_mean_gamma, pr_sd_gamma, pr_a_theta, pr_b_theta, missing));
    return rcpp_result_gen;
END_RCPP
}
// lsirm1pl_mar_ss_cpp
Rcpp::List lsirm1pl_mar_ss_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_gamma, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_spike_mean, const double pr_spike_sd, const double pr_slab_mean, const double pr_slab_sd, const double pr_a_theta, const double pr_b_theta, const double pr_beta_a, const double pr_beta_b, const double missing);
RcppExport SEXP _lsirm12pl_lsirm1pl_mar_ss_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_gammaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_spike_meanSEXP, SEXP pr_spike_sdSEXP, SEXP pr_slab_meanSEXP, SEXP pr_slab_sdSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP pr_beta_aSEXP, SEXP pr_beta_bSEXP, SEXP missingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_gamma(jump_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_spike_mean(pr_spike_meanSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_spike_sd(pr_spike_sdSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_slab_mean(pr_slab_meanSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_slab_sd(pr_slab_sdSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_beta_a(pr_beta_aSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_beta_b(pr_beta_bSEXP);
    Rcpp::traits::input_parameter< const double >::type missing(missingSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm1pl_mar_ss_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_gamma, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_spike_mean, pr_spike_sd, pr_slab_mean, pr_slab_sd, pr_a_theta, pr_b_theta, pr_beta_a, pr_beta_b, missing));
    return rcpp_result_gen;
END_RCPP
}
// lsirm1pl_mcar_cpp
Rcpp::List lsirm1pl_mcar_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_gamma, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_mean_gamma, const double pr_sd_gamma, const double pr_a_theta, const double pr_b_theta, const double missing);
RcppExport SEXP _lsirm12pl_lsirm1pl_mcar_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_gammaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_mean_gammaSEXP, SEXP pr_sd_gammaSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP missingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_gamma(jump_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_gamma(pr_mean_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_gamma(pr_sd_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type missing(missingSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm1pl_mcar_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_gamma, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_mean_gamma, pr_sd_gamma, pr_a_theta, pr_b_theta, missing));
    return rcpp_result_gen;
END_RCPP
}
// lsirm1pl_mcar_ss_cpp
Rcpp::List lsirm1pl_mcar_ss_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_gamma, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, double pr_spike_mean, const double pr_spike_sd, const double pr_slab_mean, const double pr_slab_sd, const double pr_a_theta, const double pr_b_theta, const double pr_beta_a, const double pr_beta_b, const double missing);
RcppExport SEXP _lsirm12pl_lsirm1pl_mcar_ss_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_gammaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_spike_meanSEXP, SEXP pr_spike_sdSEXP, SEXP pr_slab_meanSEXP, SEXP pr_slab_sdSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP pr_beta_aSEXP, SEXP pr_beta_bSEXP, SEXP missingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_gamma(jump_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< double >::type pr_spike_mean(pr_spike_meanSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_spike_sd(pr_spike_sdSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_slab_mean(pr_slab_meanSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_slab_sd(pr_slab_sdSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_beta_a(pr_beta_aSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_beta_b(pr_beta_bSEXP);
    Rcpp::traits::input_parameter< const double >::type missing(missingSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm1pl_mcar_ss_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_gamma, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_spike_mean, pr_spike_sd, pr_slab_mean, pr_slab_sd, pr_a_theta, pr_b_theta, pr_beta_a, pr_beta_b, missing));
    return rcpp_result_gen;
END_RCPP
}
// lsirm1pl_normal_cpp
Rcpp::List lsirm1pl_normal_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_gamma, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_mean_gamma, const double pr_sd_gamma, const double pr_a_theta, const double pr_b_theta, const double pr_a_eps, const double pr_b_eps);
RcppExport SEXP _lsirm12pl_lsirm1pl_normal_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_gammaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_mean_gammaSEXP, SEXP pr_sd_gammaSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP pr_a_epsSEXP, SEXP pr_b_epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_gamma(jump_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_gamma(pr_mean_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_gamma(pr_sd_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_eps(pr_a_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_eps(pr_b_epsSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm1pl_normal_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_gamma, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_mean_gamma, pr_sd_gamma, pr_a_theta, pr_b_theta, pr_a_eps, pr_b_eps));
    return rcpp_result_gen;
END_RCPP
}
// lsirm1pl_normal_fixed_gamma_cpp
Rcpp::List lsirm1pl_normal_fixed_gamma_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_a_theta, const double pr_b_theta, const double pr_a_eps, const double pr_b_eps);
RcppExport SEXP _lsirm12pl_lsirm1pl_normal_fixed_gamma_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP pr_a_epsSEXP, SEXP pr_b_epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_eps(pr_a_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_eps(pr_b_epsSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm1pl_normal_fixed_gamma_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_a_theta, pr_b_theta, pr_a_eps, pr_b_eps));
    return rcpp_result_gen;
END_RCPP
}
// lsirm1pl_normal_fixed_gamma_mar_cpp
Rcpp::List lsirm1pl_normal_fixed_gamma_mar_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_a_theta, const double pr_b_theta, const double pr_a_eps, const double pr_b_eps, const double missing);
RcppExport SEXP _lsirm12pl_lsirm1pl_normal_fixed_gamma_mar_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP pr_a_epsSEXP, SEXP pr_b_epsSEXP, SEXP missingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_eps(pr_a_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_eps(pr_b_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type missing(missingSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm1pl_normal_fixed_gamma_mar_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_a_theta, pr_b_theta, pr_a_eps, pr_b_eps, missing));
    return rcpp_result_gen;
END_RCPP
}
// lsirm1pl_normal_fixed_gamma_mcar_cpp
Rcpp::List lsirm1pl_normal_fixed_gamma_mcar_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_a_theta, const double pr_b_theta, const double pr_a_eps, const double pr_b_eps, const double missing);
RcppExport SEXP _lsirm12pl_lsirm1pl_normal_fixed_gamma_mcar_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP pr_a_epsSEXP, SEXP pr_b_epsSEXP, SEXP missingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_eps(pr_a_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_eps(pr_b_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type missing(missingSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm1pl_normal_fixed_gamma_mcar_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_a_theta, pr_b_theta, pr_a_eps, pr_b_eps, missing));
    return rcpp_result_gen;
END_RCPP
}
// lsirm1pl_normal_mar_cpp
Rcpp::List lsirm1pl_normal_mar_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_gamma, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_mean_gamma, const double pr_sd_gamma, const double pr_a_theta, const double pr_b_theta, const double pr_a_eps, const double pr_b_eps, const double missing);
RcppExport SEXP _lsirm12pl_lsirm1pl_normal_mar_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_gammaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_mean_gammaSEXP, SEXP pr_sd_gammaSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP pr_a_epsSEXP, SEXP pr_b_epsSEXP, SEXP missingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_gamma(jump_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_gamma(pr_mean_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_gamma(pr_sd_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_eps(pr_a_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_eps(pr_b_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type missing(missingSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm1pl_normal_mar_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_gamma, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_mean_gamma, pr_sd_gamma, pr_a_theta, pr_b_theta, pr_a_eps, pr_b_eps, missing));
    return rcpp_result_gen;
END_RCPP
}
// lsirm1pl_normal_mar_ss_cpp
Rcpp::List lsirm1pl_normal_mar_ss_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_gamma, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_spike_mean, const double pr_spike_sd, const double pr_slab_mean, const double pr_slab_sd, const double pr_a_theta, const double pr_b_theta, const double pr_a_eps, const double pr_b_eps, const double pr_beta_a, const double pr_beta_b, const double missing);
RcppExport SEXP _lsirm12pl_lsirm1pl_normal_mar_ss_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_gammaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_spike_meanSEXP, SEXP pr_spike_sdSEXP, SEXP pr_slab_meanSEXP, SEXP pr_slab_sdSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP pr_a_epsSEXP, SEXP pr_b_epsSEXP, SEXP pr_beta_aSEXP, SEXP pr_beta_bSEXP, SEXP missingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_gamma(jump_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_spike_mean(pr_spike_meanSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_spike_sd(pr_spike_sdSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_slab_mean(pr_slab_meanSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_slab_sd(pr_slab_sdSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_eps(pr_a_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_eps(pr_b_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_beta_a(pr_beta_aSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_beta_b(pr_beta_bSEXP);
    Rcpp::traits::input_parameter< const double >::type missing(missingSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm1pl_normal_mar_ss_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_gamma, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_spike_mean, pr_spike_sd, pr_slab_mean, pr_slab_sd, pr_a_theta, pr_b_theta, pr_a_eps, pr_b_eps, pr_beta_a, pr_beta_b, missing));
    return rcpp_result_gen;
END_RCPP
}
// lsirm1pl_normal_mcar_cpp
Rcpp::List lsirm1pl_normal_mcar_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_gamma, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_mean_gamma, const double pr_sd_gamma, const double pr_a_theta, const double pr_b_theta, const double pr_a_eps, const double pr_b_eps, const double missing);
RcppExport SEXP _lsirm12pl_lsirm1pl_normal_mcar_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_gammaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_mean_gammaSEXP, SEXP pr_sd_gammaSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP pr_a_epsSEXP, SEXP pr_b_epsSEXP, SEXP missingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_gamma(jump_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_gamma(pr_mean_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_gamma(pr_sd_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_eps(pr_a_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_eps(pr_b_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type missing(missingSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm1pl_normal_mcar_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_gamma, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_mean_gamma, pr_sd_gamma, pr_a_theta, pr_b_theta, pr_a_eps, pr_b_eps, missing));
    return rcpp_result_gen;
END_RCPP
}
// lsirm1pl_normal_mcar_ss_cpp
Rcpp::List lsirm1pl_normal_mcar_ss_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_gamma, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_spike_mean, const double pr_spike_sd, const double pr_slab_mean, const double pr_slab_sd, const double pr_a_theta, const double pr_b_theta, const double pr_a_eps, const double pr_b_eps, const double pr_beta_a, const double pr_beta_b, const double missing);
RcppExport SEXP _lsirm12pl_lsirm1pl_normal_mcar_ss_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_gammaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_spike_meanSEXP, SEXP pr_spike_sdSEXP, SEXP pr_slab_meanSEXP, SEXP pr_slab_sdSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP pr_a_epsSEXP, SEXP pr_b_epsSEXP, SEXP pr_beta_aSEXP, SEXP pr_beta_bSEXP, SEXP missingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_gamma(jump_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_spike_mean(pr_spike_meanSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_spike_sd(pr_spike_sdSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_slab_mean(pr_slab_meanSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_slab_sd(pr_slab_sdSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_eps(pr_a_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_eps(pr_b_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_beta_a(pr_beta_aSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_beta_b(pr_beta_bSEXP);
    Rcpp::traits::input_parameter< const double >::type missing(missingSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm1pl_normal_mcar_ss_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_gamma, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_spike_mean, pr_spike_sd, pr_slab_mean, pr_slab_sd, pr_a_theta, pr_b_theta, pr_a_eps, pr_b_eps, pr_beta_a, pr_beta_b, missing));
    return rcpp_result_gen;
END_RCPP
}
// lsirm1pl_normal_ss_cpp
Rcpp::List lsirm1pl_normal_ss_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_gamma, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_spike_mean, const double pr_spike_sd, const double pr_slab_mean, const double pr_slab_sd, const double pr_a_theta, const double pr_b_theta, const double pr_a_eps, const double pr_b_eps, const double pr_beta_a, const double pr_beta_b);
RcppExport SEXP _lsirm12pl_lsirm1pl_normal_ss_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_gammaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_spike_meanSEXP, SEXP pr_spike_sdSEXP, SEXP pr_slab_meanSEXP, SEXP pr_slab_sdSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP pr_a_epsSEXP, SEXP pr_b_epsSEXP, SEXP pr_beta_aSEXP, SEXP pr_beta_bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_gamma(jump_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_spike_mean(pr_spike_meanSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_spike_sd(pr_spike_sdSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_slab_mean(pr_slab_meanSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_slab_sd(pr_slab_sdSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_eps(pr_a_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_eps(pr_b_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_beta_a(pr_beta_aSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_beta_b(pr_beta_bSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm1pl_normal_ss_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_gamma, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_spike_mean, pr_spike_sd, pr_slab_mean, pr_slab_sd, pr_a_theta, pr_b_theta, pr_a_eps, pr_b_eps, pr_beta_a, pr_beta_b));
    return rcpp_result_gen;
END_RCPP
}
// lsirm1pl_ss_cpp
Rcpp::List lsirm1pl_ss_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_gamma, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_spike_mean, const double pr_spike_sd, const double pr_slab_mean, const double pr_slab_sd, const double pr_a_theta, const double pr_b_theta, const double pr_beta_a, const double pr_beta_b);
RcppExport SEXP _lsirm12pl_lsirm1pl_ss_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_gammaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_spike_meanSEXP, SEXP pr_spike_sdSEXP, SEXP pr_slab_meanSEXP, SEXP pr_slab_sdSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP pr_beta_aSEXP, SEXP pr_beta_bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_gamma(jump_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_spike_mean(pr_spike_meanSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_spike_sd(pr_spike_sdSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_slab_mean(pr_slab_meanSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_slab_sd(pr_slab_sdSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_beta_a(pr_beta_aSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_beta_b(pr_beta_bSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm1pl_ss_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_gamma, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_spike_mean, pr_spike_sd, pr_slab_mean, pr_slab_sd, pr_a_theta, pr_b_theta, pr_beta_a, pr_beta_b));
    return rcpp_result_gen;
END_RCPP
}
// lsirm2pl_cpp
Rcpp::List lsirm2pl_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_alpha, const double jump_gamma, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_mean_gamma, const double pr_sd_gamma, const double pr_mean_alpha, const double pr_sd_alpha, const double pr_a_theta, const double pr_b_theta);
RcppExport SEXP _lsirm12pl_lsirm2pl_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_alphaSEXP, SEXP jump_gammaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_mean_gammaSEXP, SEXP pr_sd_gammaSEXP, SEXP pr_mean_alphaSEXP, SEXP pr_sd_alphaSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_alpha(jump_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_gamma(jump_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_gamma(pr_mean_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_gamma(pr_sd_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_alpha(pr_mean_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_alpha(pr_sd_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm2pl_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_alpha, jump_gamma, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_mean_gamma, pr_sd_gamma, pr_mean_alpha, pr_sd_alpha, pr_a_theta, pr_b_theta));
    return rcpp_result_gen;
END_RCPP
}
// lsirm2pl_fixed_gamma_cpp
Rcpp::List lsirm2pl_fixed_gamma_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_alpha, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_mean_alpha, const double pr_sd_alpha, const double pr_a_theta, const double pr_b_theta);
RcppExport SEXP _lsirm12pl_lsirm2pl_fixed_gamma_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_alphaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_mean_alphaSEXP, SEXP pr_sd_alphaSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_alpha(jump_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_alpha(pr_mean_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_alpha(pr_sd_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm2pl_fixed_gamma_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_alpha, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_mean_alpha, pr_sd_alpha, pr_a_theta, pr_b_theta));
    return rcpp_result_gen;
END_RCPP
}
// lsirm2pl_fixed_gamma_mar_cpp
Rcpp::List lsirm2pl_fixed_gamma_mar_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_alpha, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_mean_alpha, const double pr_sd_alpha, const double pr_a_theta, const double pr_b_theta, const double missing);
RcppExport SEXP _lsirm12pl_lsirm2pl_fixed_gamma_mar_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_alphaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_mean_alphaSEXP, SEXP pr_sd_alphaSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP missingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_alpha(jump_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_alpha(pr_mean_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_alpha(pr_sd_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type missing(missingSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm2pl_fixed_gamma_mar_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_alpha, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_mean_alpha, pr_sd_alpha, pr_a_theta, pr_b_theta, missing));
    return rcpp_result_gen;
END_RCPP
}
// lsirm2pl_fixed_gamma_mcar_cpp
Rcpp::List lsirm2pl_fixed_gamma_mcar_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_alpha, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_mean_alpha, const double pr_sd_alpha, const double pr_a_theta, const double pr_b_theta, const double missing);
RcppExport SEXP _lsirm12pl_lsirm2pl_fixed_gamma_mcar_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_alphaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_mean_alphaSEXP, SEXP pr_sd_alphaSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP missingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_alpha(jump_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_alpha(pr_mean_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_alpha(pr_sd_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type missing(missingSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm2pl_fixed_gamma_mcar_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_alpha, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_mean_alpha, pr_sd_alpha, pr_a_theta, pr_b_theta, missing));
    return rcpp_result_gen;
END_RCPP
}
// lsirm2pl_mar_cpp
Rcpp::List lsirm2pl_mar_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_alpha, const double jump_gamma, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_mean_gamma, const double pr_sd_gamma, const double pr_mean_alpha, const double pr_sd_alpha, const double pr_a_theta, const double pr_b_theta, const double missing);
RcppExport SEXP _lsirm12pl_lsirm2pl_mar_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_alphaSEXP, SEXP jump_gammaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_mean_gammaSEXP, SEXP pr_sd_gammaSEXP, SEXP pr_mean_alphaSEXP, SEXP pr_sd_alphaSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP missingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_alpha(jump_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_gamma(jump_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_gamma(pr_mean_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_gamma(pr_sd_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_alpha(pr_mean_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_alpha(pr_sd_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type missing(missingSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm2pl_mar_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_alpha, jump_gamma, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_mean_gamma, pr_sd_gamma, pr_mean_alpha, pr_sd_alpha, pr_a_theta, pr_b_theta, missing));
    return rcpp_result_gen;
END_RCPP
}
// lsirm2pl_mar_ss_cpp
Rcpp::List lsirm2pl_mar_ss_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_alpha, const double jump_gamma, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_spike_mean, const double pr_spike_sd, const double pr_slab_mean, const double pr_slab_sd, const double pr_mean_alpha, const double pr_sd_alpha, const double pr_a_theta, const double pr_b_theta, const double pr_beta_a, const double pr_beta_b, const double missing);
RcppExport SEXP _lsirm12pl_lsirm2pl_mar_ss_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_alphaSEXP, SEXP jump_gammaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_spike_meanSEXP, SEXP pr_spike_sdSEXP, SEXP pr_slab_meanSEXP, SEXP pr_slab_sdSEXP, SEXP pr_mean_alphaSEXP, SEXP pr_sd_alphaSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP pr_beta_aSEXP, SEXP pr_beta_bSEXP, SEXP missingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_alpha(jump_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_gamma(jump_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_spike_mean(pr_spike_meanSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_spike_sd(pr_spike_sdSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_slab_mean(pr_slab_meanSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_slab_sd(pr_slab_sdSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_alpha(pr_mean_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_alpha(pr_sd_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_beta_a(pr_beta_aSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_beta_b(pr_beta_bSEXP);
    Rcpp::traits::input_parameter< const double >::type missing(missingSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm2pl_mar_ss_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_alpha, jump_gamma, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_spike_mean, pr_spike_sd, pr_slab_mean, pr_slab_sd, pr_mean_alpha, pr_sd_alpha, pr_a_theta, pr_b_theta, pr_beta_a, pr_beta_b, missing));
    return rcpp_result_gen;
END_RCPP
}
// lsirm2pl_mcar_cpp
Rcpp::List lsirm2pl_mcar_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_alpha, const double jump_gamma, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_mean_gamma, const double pr_sd_gamma, const double pr_mean_alpha, const double pr_sd_alpha, const double pr_a_theta, const double pr_b_theta, const double missing);
RcppExport SEXP _lsirm12pl_lsirm2pl_mcar_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_alphaSEXP, SEXP jump_gammaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_mean_gammaSEXP, SEXP pr_sd_gammaSEXP, SEXP pr_mean_alphaSEXP, SEXP pr_sd_alphaSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP missingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_alpha(jump_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_gamma(jump_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_gamma(pr_mean_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_gamma(pr_sd_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_alpha(pr_mean_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_alpha(pr_sd_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type missing(missingSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm2pl_mcar_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_alpha, jump_gamma, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_mean_gamma, pr_sd_gamma, pr_mean_alpha, pr_sd_alpha, pr_a_theta, pr_b_theta, missing));
    return rcpp_result_gen;
END_RCPP
}
// lsirm2pl_mcar_ss_cpp
Rcpp::List lsirm2pl_mcar_ss_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_alpha, const double jump_gamma, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_spike_mean, const double pr_spike_sd, const double pr_slab_mean, const double pr_slab_sd, const double pr_mean_alpha, const double pr_sd_alpha, const double pr_a_theta, const double pr_b_theta, const double pr_beta_a, const double pr_beta_b, const double missing);
RcppExport SEXP _lsirm12pl_lsirm2pl_mcar_ss_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_alphaSEXP, SEXP jump_gammaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_spike_meanSEXP, SEXP pr_spike_sdSEXP, SEXP pr_slab_meanSEXP, SEXP pr_slab_sdSEXP, SEXP pr_mean_alphaSEXP, SEXP pr_sd_alphaSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP pr_beta_aSEXP, SEXP pr_beta_bSEXP, SEXP missingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_alpha(jump_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_gamma(jump_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_spike_mean(pr_spike_meanSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_spike_sd(pr_spike_sdSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_slab_mean(pr_slab_meanSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_slab_sd(pr_slab_sdSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_alpha(pr_mean_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_alpha(pr_sd_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_beta_a(pr_beta_aSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_beta_b(pr_beta_bSEXP);
    Rcpp::traits::input_parameter< const double >::type missing(missingSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm2pl_mcar_ss_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_alpha, jump_gamma, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_spike_mean, pr_spike_sd, pr_slab_mean, pr_slab_sd, pr_mean_alpha, pr_sd_alpha, pr_a_theta, pr_b_theta, pr_beta_a, pr_beta_b, missing));
    return rcpp_result_gen;
END_RCPP
}
// lsirm2pl_normal_cpp
Rcpp::List lsirm2pl_normal_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_alpha, const double jump_gamma, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_a_theta, const double pr_b_theta, const double pr_mean_theta, const double pr_a_eps, const double pr_b_eps, const double pr_mean_gamma, const double pr_sd_gamma, const double pr_mean_alpha, const double pr_sd_alpha);
RcppExport SEXP _lsirm12pl_lsirm2pl_normal_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_alphaSEXP, SEXP jump_gammaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_a_epsSEXP, SEXP pr_b_epsSEXP, SEXP pr_mean_gammaSEXP, SEXP pr_sd_gammaSEXP, SEXP pr_mean_alphaSEXP, SEXP pr_sd_alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_alpha(jump_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_gamma(jump_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_eps(pr_a_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_eps(pr_b_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_gamma(pr_mean_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_gamma(pr_sd_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_alpha(pr_mean_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_alpha(pr_sd_alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm2pl_normal_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_alpha, jump_gamma, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_a_theta, pr_b_theta, pr_mean_theta, pr_a_eps, pr_b_eps, pr_mean_gamma, pr_sd_gamma, pr_mean_alpha, pr_sd_alpha));
    return rcpp_result_gen;
END_RCPP
}
// lsirm2pl_normal_fixed_gamma_cpp
Rcpp::List lsirm2pl_normal_fixed_gamma_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_alpha, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_a_theta, const double pr_b_theta, const double pr_mean_theta, const double pr_a_eps, const double pr_b_eps, const double pr_mean_alpha, const double pr_sd_alpha);
RcppExport SEXP _lsirm12pl_lsirm2pl_normal_fixed_gamma_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_alphaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_a_epsSEXP, SEXP pr_b_epsSEXP, SEXP pr_mean_alphaSEXP, SEXP pr_sd_alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_alpha(jump_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_eps(pr_a_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_eps(pr_b_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_alpha(pr_mean_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_alpha(pr_sd_alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm2pl_normal_fixed_gamma_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_alpha, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_a_theta, pr_b_theta, pr_mean_theta, pr_a_eps, pr_b_eps, pr_mean_alpha, pr_sd_alpha));
    return rcpp_result_gen;
END_RCPP
}
// lsirm2pl_normal_fixed_gamma_mar_cpp
Rcpp::List lsirm2pl_normal_fixed_gamma_mar_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_alpha, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_a_theta, const double pr_b_theta, const double pr_mean_theta, const double pr_a_eps, const double pr_b_eps, const double pr_mean_alpha, const double pr_sd_alpha, const double missing);
RcppExport SEXP _lsirm12pl_lsirm2pl_normal_fixed_gamma_mar_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_alphaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_a_epsSEXP, SEXP pr_b_epsSEXP, SEXP pr_mean_alphaSEXP, SEXP pr_sd_alphaSEXP, SEXP missingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_alpha(jump_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_eps(pr_a_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_eps(pr_b_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_alpha(pr_mean_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_alpha(pr_sd_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type missing(missingSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm2pl_normal_fixed_gamma_mar_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_alpha, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_a_theta, pr_b_theta, pr_mean_theta, pr_a_eps, pr_b_eps, pr_mean_alpha, pr_sd_alpha, missing));
    return rcpp_result_gen;
END_RCPP
}
// lsirm2pl_normal_fixed_gamma_mcar_cpp
Rcpp::List lsirm2pl_normal_fixed_gamma_mcar_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_alpha, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_a_theta, const double pr_b_theta, const double pr_mean_theta, const double pr_a_eps, const double pr_b_eps, const double pr_mean_alpha, const double pr_sd_alpha, const double missing);
RcppExport SEXP _lsirm12pl_lsirm2pl_normal_fixed_gamma_mcar_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_alphaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_a_epsSEXP, SEXP pr_b_epsSEXP, SEXP pr_mean_alphaSEXP, SEXP pr_sd_alphaSEXP, SEXP missingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_alpha(jump_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_eps(pr_a_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_eps(pr_b_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_alpha(pr_mean_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_alpha(pr_sd_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type missing(missingSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm2pl_normal_fixed_gamma_mcar_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_alpha, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_a_theta, pr_b_theta, pr_mean_theta, pr_a_eps, pr_b_eps, pr_mean_alpha, pr_sd_alpha, missing));
    return rcpp_result_gen;
END_RCPP
}
// lsirm2pl_normal_mar_cpp
Rcpp::List lsirm2pl_normal_mar_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_alpha, const double jump_gamma, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_a_theta, const double pr_b_theta, const double pr_mean_theta, const double pr_a_eps, const double pr_b_eps, const double pr_mean_gamma, const double pr_sd_gamma, const double pr_mean_alpha, const double pr_sd_alpha, const double missing);
RcppExport SEXP _lsirm12pl_lsirm2pl_normal_mar_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_alphaSEXP, SEXP jump_gammaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_a_epsSEXP, SEXP pr_b_epsSEXP, SEXP pr_mean_gammaSEXP, SEXP pr_sd_gammaSEXP, SEXP pr_mean_alphaSEXP, SEXP pr_sd_alphaSEXP, SEXP missingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_alpha(jump_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_gamma(jump_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_eps(pr_a_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_eps(pr_b_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_gamma(pr_mean_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_gamma(pr_sd_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_alpha(pr_mean_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_alpha(pr_sd_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type missing(missingSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm2pl_normal_mar_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_alpha, jump_gamma, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_a_theta, pr_b_theta, pr_mean_theta, pr_a_eps, pr_b_eps, pr_mean_gamma, pr_sd_gamma, pr_mean_alpha, pr_sd_alpha, missing));
    return rcpp_result_gen;
END_RCPP
}
// lsirm2pl_normal_mar_ss_cpp
Rcpp::List lsirm2pl_normal_mar_ss_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_alpha, const double jump_gamma, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_spike_mean, const double pr_spike_sd, const double pr_slab_mean, const double pr_slab_sd, const double pr_mean_alpha, const double pr_sd_alpha, const double pr_a_eps, const double pr_b_eps, const double pr_a_theta, const double pr_b_theta, const double pr_beta_a, const double pr_beta_b, const double missing);
RcppExport SEXP _lsirm12pl_lsirm2pl_normal_mar_ss_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_alphaSEXP, SEXP jump_gammaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_spike_meanSEXP, SEXP pr_spike_sdSEXP, SEXP pr_slab_meanSEXP, SEXP pr_slab_sdSEXP, SEXP pr_mean_alphaSEXP, SEXP pr_sd_alphaSEXP, SEXP pr_a_epsSEXP, SEXP pr_b_epsSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP pr_beta_aSEXP, SEXP pr_beta_bSEXP, SEXP missingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_alpha(jump_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_gamma(jump_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_spike_mean(pr_spike_meanSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_spike_sd(pr_spike_sdSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_slab_mean(pr_slab_meanSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_slab_sd(pr_slab_sdSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_alpha(pr_mean_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_alpha(pr_sd_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_eps(pr_a_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_eps(pr_b_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_beta_a(pr_beta_aSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_beta_b(pr_beta_bSEXP);
    Rcpp::traits::input_parameter< const double >::type missing(missingSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm2pl_normal_mar_ss_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_alpha, jump_gamma, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_spike_mean, pr_spike_sd, pr_slab_mean, pr_slab_sd, pr_mean_alpha, pr_sd_alpha, pr_a_eps, pr_b_eps, pr_a_theta, pr_b_theta, pr_beta_a, pr_beta_b, missing));
    return rcpp_result_gen;
END_RCPP
}
// lsirm2pl_normal_mcar_cpp
Rcpp::List lsirm2pl_normal_mcar_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_alpha, const double jump_gamma, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_a_theta, const double pr_b_theta, const double pr_mean_theta, const double pr_a_eps, const double pr_b_eps, const double pr_mean_gamma, const double pr_sd_gamma, const double pr_mean_alpha, const double pr_sd_alpha, const double missing);
RcppExport SEXP _lsirm12pl_lsirm2pl_normal_mcar_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_alphaSEXP, SEXP jump_gammaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_a_epsSEXP, SEXP pr_b_epsSEXP, SEXP pr_mean_gammaSEXP, SEXP pr_sd_gammaSEXP, SEXP pr_mean_alphaSEXP, SEXP pr_sd_alphaSEXP, SEXP missingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_alpha(jump_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_gamma(jump_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_eps(pr_a_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_eps(pr_b_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_gamma(pr_mean_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_gamma(pr_sd_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_alpha(pr_mean_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_alpha(pr_sd_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type missing(missingSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm2pl_normal_mcar_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_alpha, jump_gamma, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_a_theta, pr_b_theta, pr_mean_theta, pr_a_eps, pr_b_eps, pr_mean_gamma, pr_sd_gamma, pr_mean_alpha, pr_sd_alpha, missing));
    return rcpp_result_gen;
END_RCPP
}
// lsirm2pl_normal_mcar_ss_cpp
Rcpp::List lsirm2pl_normal_mcar_ss_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_alpha, const double jump_gamma, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_spike_mean, const double pr_spike_sd, const double pr_slab_mean, const double pr_slab_sd, const double pr_mean_alpha, const double pr_sd_alpha, const double pr_a_eps, const double pr_b_eps, const double pr_a_theta, const double pr_b_theta, const double pr_beta_a, const double pr_beta_b, const double missing);
RcppExport SEXP _lsirm12pl_lsirm2pl_normal_mcar_ss_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_alphaSEXP, SEXP jump_gammaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_spike_meanSEXP, SEXP pr_spike_sdSEXP, SEXP pr_slab_meanSEXP, SEXP pr_slab_sdSEXP, SEXP pr_mean_alphaSEXP, SEXP pr_sd_alphaSEXP, SEXP pr_a_epsSEXP, SEXP pr_b_epsSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP pr_beta_aSEXP, SEXP pr_beta_bSEXP, SEXP missingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_alpha(jump_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_gamma(jump_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_spike_mean(pr_spike_meanSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_spike_sd(pr_spike_sdSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_slab_mean(pr_slab_meanSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_slab_sd(pr_slab_sdSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_alpha(pr_mean_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_alpha(pr_sd_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_eps(pr_a_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_eps(pr_b_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_beta_a(pr_beta_aSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_beta_b(pr_beta_bSEXP);
    Rcpp::traits::input_parameter< const double >::type missing(missingSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm2pl_normal_mcar_ss_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_alpha, jump_gamma, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_spike_mean, pr_spike_sd, pr_slab_mean, pr_slab_sd, pr_mean_alpha, pr_sd_alpha, pr_a_eps, pr_b_eps, pr_a_theta, pr_b_theta, pr_beta_a, pr_beta_b, missing));
    return rcpp_result_gen;
END_RCPP
}
// lsirm2pl_normal_ss_cpp
Rcpp::List lsirm2pl_normal_ss_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_alpha, const double jump_gamma, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_spike_mean, const double pr_spike_sd, const double pr_slab_mean, const double pr_slab_sd, const double pr_mean_alpha, const double pr_sd_alpha, const double pr_a_eps, const double pr_b_eps, const double pr_a_theta, const double pr_b_theta, const double pr_beta_a, const double pr_beta_b);
RcppExport SEXP _lsirm12pl_lsirm2pl_normal_ss_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_alphaSEXP, SEXP jump_gammaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_spike_meanSEXP, SEXP pr_spike_sdSEXP, SEXP pr_slab_meanSEXP, SEXP pr_slab_sdSEXP, SEXP pr_mean_alphaSEXP, SEXP pr_sd_alphaSEXP, SEXP pr_a_epsSEXP, SEXP pr_b_epsSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP pr_beta_aSEXP, SEXP pr_beta_bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_alpha(jump_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_gamma(jump_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_spike_mean(pr_spike_meanSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_spike_sd(pr_spike_sdSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_slab_mean(pr_slab_meanSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_slab_sd(pr_slab_sdSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_alpha(pr_mean_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_alpha(pr_sd_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_eps(pr_a_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_eps(pr_b_epsSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_beta_a(pr_beta_aSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_beta_b(pr_beta_bSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm2pl_normal_ss_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_alpha, jump_gamma, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_spike_mean, pr_spike_sd, pr_slab_mean, pr_slab_sd, pr_mean_alpha, pr_sd_alpha, pr_a_eps, pr_b_eps, pr_a_theta, pr_b_theta, pr_beta_a, pr_beta_b));
    return rcpp_result_gen;
END_RCPP
}
// lsirm2pl_ss_cpp
Rcpp::List lsirm2pl_ss_cpp(arma::mat data, const int ndim, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_alpha, const double jump_gamma, const double jump_z, const double jump_w, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_spike_mean, const double pr_spike_sd, const double pr_slab_mean, const double pr_slab_sd, const double pr_mean_alpha, const double pr_sd_alpha, const double pr_a_theta, const double pr_b_theta, const double pr_beta_a, const double pr_beta_b);
RcppExport SEXP _lsirm12pl_lsirm2pl_ss_cpp(SEXP dataSEXP, SEXP ndimSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_alphaSEXP, SEXP jump_gammaSEXP, SEXP jump_zSEXP, SEXP jump_wSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_spike_meanSEXP, SEXP pr_spike_sdSEXP, SEXP pr_slab_meanSEXP, SEXP pr_slab_sdSEXP, SEXP pr_mean_alphaSEXP, SEXP pr_sd_alphaSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP, SEXP pr_beta_aSEXP, SEXP pr_beta_bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_alpha(jump_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_gamma(jump_gammaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_z(jump_zSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_w(jump_wSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_spike_mean(pr_spike_meanSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_spike_sd(pr_spike_sdSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_slab_mean(pr_slab_meanSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_slab_sd(pr_slab_sdSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_alpha(pr_mean_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_alpha(pr_sd_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_beta_a(pr_beta_aSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_beta_b(pr_beta_bSEXP);
    rcpp_result_gen = Rcpp::wrap(lsirm2pl_ss_cpp(data, ndim, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_alpha, jump_gamma, jump_z, jump_w, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_spike_mean, pr_spike_sd, pr_slab_mean, pr_slab_sd, pr_mean_alpha, pr_sd_alpha, pr_a_theta, pr_b_theta, pr_beta_a, pr_beta_b));
    return rcpp_result_gen;
END_RCPP
}
// onepl_cpp
Rcpp::List onepl_cpp(arma::mat data, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_a_theta, const double pr_b_theta);
RcppExport SEXP _lsirm12pl_onepl_cpp(SEXP dataSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(onepl_cpp(data, niter, nburn, nthin, nprint, jump_beta, jump_theta, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_a_theta, pr_b_theta));
    return rcpp_result_gen;
END_RCPP
}
// two_pl
Rcpp::List two_pl(arma::mat data, const int niter, const int nburn, const int nthin, const int nprint, const double jump_beta, const double jump_theta, const double jump_alpha, const double pr_mean_beta, const double pr_sd_beta, const double pr_mean_theta, const double pr_mean_alpha, const double pr_sd_alpha, const double pr_a_theta, const double pr_b_theta);
RcppExport SEXP _lsirm12pl_two_pl(SEXP dataSEXP, SEXP niterSEXP, SEXP nburnSEXP, SEXP nthinSEXP, SEXP nprintSEXP, SEXP jump_betaSEXP, SEXP jump_thetaSEXP, SEXP jump_alphaSEXP, SEXP pr_mean_betaSEXP, SEXP pr_sd_betaSEXP, SEXP pr_mean_thetaSEXP, SEXP pr_mean_alphaSEXP, SEXP pr_sd_alphaSEXP, SEXP pr_a_thetaSEXP, SEXP pr_b_thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< const int >::type nburn(nburnSEXP);
    Rcpp::traits::input_parameter< const int >::type nthin(nthinSEXP);
    Rcpp::traits::input_parameter< const int >::type nprint(nprintSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_beta(jump_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_theta(jump_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type jump_alpha(jump_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_beta(pr_mean_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_beta(pr_sd_betaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_theta(pr_mean_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_mean_alpha(pr_mean_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_sd_alpha(pr_sd_alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_a_theta(pr_a_thetaSEXP);
    Rcpp::traits::input_parameter< const double >::type pr_b_theta(pr_b_thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(two_pl(data, niter, nburn, nthin, nprint, jump_beta, jump_theta, jump_alpha, pr_mean_beta, pr_sd_beta, pr_mean_theta, pr_mean_alpha, pr_sd_alpha, pr_a_theta, pr_b_theta));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_lsirm12pl_intrm1pl_cpp", (DL_FUNC) &_lsirm12pl_intrm1pl_cpp, 15},
    {"_lsirm12pl_intrm1pl_mar_cpp", (DL_FUNC) &_lsirm12pl_intrm1pl_mar_cpp, 16},
    {"_lsirm12pl_intrm1pl_mcar_cpp", (DL_FUNC) &_lsirm12pl_intrm1pl_mcar_cpp, 16},
    {"_lsirm12pl_intrm1pl_normal_cpp", (DL_FUNC) &_lsirm12pl_intrm1pl_normal_cpp, 17},
    {"_lsirm12pl_intrm1pl_normal_mar_cpp", (DL_FUNC) &_lsirm12pl_intrm1pl_normal_mar_cpp, 18},
    {"_lsirm12pl_intrm1pl_normal_mcar_cpp", (DL_FUNC) &_lsirm12pl_intrm1pl_normal_mcar_cpp, 18},
    {"_lsirm12pl_intrm2pl_cpp", (DL_FUNC) &_lsirm12pl_intrm2pl_cpp, 18},
    {"_lsirm12pl_intrm2pl_mar_cpp", (DL_FUNC) &_lsirm12pl_intrm2pl_mar_cpp, 19},
    {"_lsirm12pl_intrm2pl_mcar_cpp", (DL_FUNC) &_lsirm12pl_intrm2pl_mcar_cpp, 19},
    {"_lsirm12pl_intrm2pl_normal_cpp", (DL_FUNC) &_lsirm12pl_intrm2pl_normal_cpp, 20},
    {"_lsirm12pl_intrm2pl_normal_mar_cpp", (DL_FUNC) &_lsirm12pl_intrm2pl_normal_mar_cpp, 21},
    {"_lsirm12pl_intrm2pl_normal_mcar_cpp", (DL_FUNC) &_lsirm12pl_intrm2pl_normal_mcar_cpp, 21},
    {"_lsirm12pl_lsirm1pl_cpp", (DL_FUNC) &_lsirm12pl_lsirm1pl_cpp, 18},
    {"_lsirm12pl_lsirm1pl_fixed_gamma_cpp", (DL_FUNC) &_lsirm12pl_lsirm1pl_fixed_gamma_cpp, 15},
    {"_lsirm12pl_lsirm1pl_fixed_gamma_mar_cpp", (DL_FUNC) &_lsirm12pl_lsirm1pl_fixed_gamma_mar_cpp, 16},
    {"_lsirm12pl_lsirm1pl_fixed_gamma_mcar_cpp", (DL_FUNC) &_lsirm12pl_lsirm1pl_fixed_gamma_mcar_cpp, 16},
    {"_lsirm12pl_lsirm1pl_mar_cpp", (DL_FUNC) &_lsirm12pl_lsirm1pl_mar_cpp, 19},
    {"_lsirm12pl_lsirm1pl_mar_ss_cpp", (DL_FUNC) &_lsirm12pl_lsirm1pl_mar_ss_cpp, 23},
    {"_lsirm12pl_lsirm1pl_mcar_cpp", (DL_FUNC) &_lsirm12pl_lsirm1pl_mcar_cpp, 19},
    {"_lsirm12pl_lsirm1pl_mcar_ss_cpp", (DL_FUNC) &_lsirm12pl_lsirm1pl_mcar_ss_cpp, 23},
    {"_lsirm12pl_lsirm1pl_normal_cpp", (DL_FUNC) &_lsirm12pl_lsirm1pl_normal_cpp, 20},
    {"_lsirm12pl_lsirm1pl_normal_fixed_gamma_cpp", (DL_FUNC) &_lsirm12pl_lsirm1pl_normal_fixed_gamma_cpp, 17},
    {"_lsirm12pl_lsirm1pl_normal_fixed_gamma_mar_cpp", (DL_FUNC) &_lsirm12pl_lsirm1pl_normal_fixed_gamma_mar_cpp, 18},
    {"_lsirm12pl_lsirm1pl_normal_fixed_gamma_mcar_cpp", (DL_FUNC) &_lsirm12pl_lsirm1pl_normal_fixed_gamma_mcar_cpp, 18},
    {"_lsirm12pl_lsirm1pl_normal_mar_cpp", (DL_FUNC) &_lsirm12pl_lsirm1pl_normal_mar_cpp, 21},
    {"_lsirm12pl_lsirm1pl_normal_mar_ss_cpp", (DL_FUNC) &_lsirm12pl_lsirm1pl_normal_mar_ss_cpp, 25},
    {"_lsirm12pl_lsirm1pl_normal_mcar_cpp", (DL_FUNC) &_lsirm12pl_lsirm1pl_normal_mcar_cpp, 21},
    {"_lsirm12pl_lsirm1pl_normal_mcar_ss_cpp", (DL_FUNC) &_lsirm12pl_lsirm1pl_normal_mcar_ss_cpp, 25},
    {"_lsirm12pl_lsirm1pl_normal_ss_cpp", (DL_FUNC) &_lsirm12pl_lsirm1pl_normal_ss_cpp, 24},
    {"_lsirm12pl_lsirm1pl_ss_cpp", (DL_FUNC) &_lsirm12pl_lsirm1pl_ss_cpp, 22},
    {"_lsirm12pl_lsirm2pl_cpp", (DL_FUNC) &_lsirm12pl_lsirm2pl_cpp, 21},
    {"_lsirm12pl_lsirm2pl_fixed_gamma_cpp", (DL_FUNC) &_lsirm12pl_lsirm2pl_fixed_gamma_cpp, 18},
    {"_lsirm12pl_lsirm2pl_fixed_gamma_mar_cpp", (DL_FUNC) &_lsirm12pl_lsirm2pl_fixed_gamma_mar_cpp, 19},
    {"_lsirm12pl_lsirm2pl_fixed_gamma_mcar_cpp", (DL_FUNC) &_lsirm12pl_lsirm2pl_fixed_gamma_mcar_cpp, 19},
    {"_lsirm12pl_lsirm2pl_mar_cpp", (DL_FUNC) &_lsirm12pl_lsirm2pl_mar_cpp, 22},
    {"_lsirm12pl_lsirm2pl_mar_ss_cpp", (DL_FUNC) &_lsirm12pl_lsirm2pl_mar_ss_cpp, 26},
    {"_lsirm12pl_lsirm2pl_mcar_cpp", (DL_FUNC) &_lsirm12pl_lsirm2pl_mcar_cpp, 22},
    {"_lsirm12pl_lsirm2pl_mcar_ss_cpp", (DL_FUNC) &_lsirm12pl_lsirm2pl_mcar_ss_cpp, 26},
    {"_lsirm12pl_lsirm2pl_normal_cpp", (DL_FUNC) &_lsirm12pl_lsirm2pl_normal_cpp, 23},
    {"_lsirm12pl_lsirm2pl_normal_fixed_gamma_cpp", (DL_FUNC) &_lsirm12pl_lsirm2pl_normal_fixed_gamma_cpp, 20},
    {"_lsirm12pl_lsirm2pl_normal_fixed_gamma_mar_cpp", (DL_FUNC) &_lsirm12pl_lsirm2pl_normal_fixed_gamma_mar_cpp, 21},
    {"_lsirm12pl_lsirm2pl_normal_fixed_gamma_mcar_cpp", (DL_FUNC) &_lsirm12pl_lsirm2pl_normal_fixed_gamma_mcar_cpp, 21},
    {"_lsirm12pl_lsirm2pl_normal_mar_cpp", (DL_FUNC) &_lsirm12pl_lsirm2pl_normal_mar_cpp, 24},
    {"_lsirm12pl_lsirm2pl_normal_mar_ss_cpp", (DL_FUNC) &_lsirm12pl_lsirm2pl_normal_mar_ss_cpp, 28},
    {"_lsirm12pl_lsirm2pl_normal_mcar_cpp", (DL_FUNC) &_lsirm12pl_lsirm2pl_normal_mcar_cpp, 24},
    {"_lsirm12pl_lsirm2pl_normal_mcar_ss_cpp", (DL_FUNC) &_lsirm12pl_lsirm2pl_normal_mcar_ss_cpp, 28},
    {"_lsirm12pl_lsirm2pl_normal_ss_cpp", (DL_FUNC) &_lsirm12pl_lsirm2pl_normal_ss_cpp, 27},
    {"_lsirm12pl_lsirm2pl_ss_cpp", (DL_FUNC) &_lsirm12pl_lsirm2pl_ss_cpp, 25},
    {"_lsirm12pl_onepl_cpp", (DL_FUNC) &_lsirm12pl_onepl_cpp, 12},
    {"_lsirm12pl_two_pl", (DL_FUNC) &_lsirm12pl_two_pl, 15},
    {NULL, NULL, 0}
};

RcppExport void R_init_lsirm12pl(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
